//SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

library AllocationLogger {

    /**
     * @param allocationUid: a uid generated by the sturdy subnet in response to your allocation request
     * @param minerUid: the uid of the miner whose allocation you use
     * @param userAddress: the address of the eoa account/contract which holds the assets that need to be allocated
     * @param allocatedPools: the addresses of the underlying "pools" in which the assets will be distributed across
     * @param allocationAmounts: the amounts allocated across the aforementioned pools (in the same order)
     */
    event AllocationEvent(
        bytes32 indexed allocationUid,
        uint256 indexed minerUid,
        address indexed userAddress,
        address[] allocatedPools,
        uint256[] allocationAmounts
    );
    error MismatchedArrays();

    function logAllocation(
        bytes32 allocationUid, 
        uint256 minerUid,
        address userAddress,
        address[] memory allocatedPools,
        uint256[] memory allocationAmounts
    ) internal {
        if(!(allocatedPools.length == allocationAmounts.length)) {
            revert MismatchedArrays();
        }

        // Emit the event
        emit AllocationEvent(allocationUid, minerUid, userAddress, allocatedPools, allocationAmounts);
    }
}